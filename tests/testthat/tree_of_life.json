{
    "test_mrca_normal_input": {
        "test_function": "tree_of_life_mrca",
        "test_input": "[412129, 536234]",
        "tests": {
             "of_type": ["dict","Response is of wrong type"],
             "passes": ["response['nearest_taxon_mrca_rank'] == 'superorder'","Fails that nearest_taxon_mrca_rank contains superorder"],
             "contains": ["nearest_taxon_mrca_ott_id","Doesn't contain nearest_taxon_mrca_ott_id"]
        }
    },
    "test_mrca_empty_list_input": {
        "test_function": "tree_of_life_mrca",
        "test_input": "[]",
        "tests": {
             "error": ["ValueError","Return wrong kind of error, or did return error"]
        }
    },
    "test_mrca_empty_list_input_two": {
        "test_function": "tree_of_life_mrca",
        "test_input": "[],[]",
        "tests": {
             "error": ["ValueError","Return wrong kind of error, or did return error"]
        }
    },
    "test_mrca_non_existing_node": {
        "test_function": "tree_of_life_mrca",
        "test_input": "[4259824365942365972436598732]",
        "tests": {
            "error": ["OpenTreeService.OpenTreeError","Return wrong kind of error, or did return error"]
        }
    },
    "test_mrca_non_existing_empty": {
        "test_function": "tree_of_life_mrca",
        "test_input": "null",
        "tests": {
            "error": ["ValueError","Return wrong kind of error, or did return error"]
        }
    },
    "test_subtree_demo": {
        "test_function": "tree_of_life_subtree",
        "test_input": "3599390",
        "tests": {
             "of_type": ["dict","Response is of wrong type"],
             "contains": ["newick","Doesn't contain a newick string"]
        }
    },   
    "test_subtree_null": {
        "test_function": "tree_of_life_subtree",
        "test_input": "null",
        "tests": {
            "error": ["ValueError","Return wrong kind of error, or did return error"]
        }
    },  
    "test_induced_tree_good": {
        "test_function": "tree_of_life_induced_subtree",
        "test_input": "[292466, 501678, 267845, 666104, 316878, 102710, 176458]",
        "tests": {
             "of_type": ["dict","Response is of wrong type"],
             "contains": ["subtree","Doesn't contain a subtree string"]
        }
    },  
    "test_induced_tree_null": {
        "test_function": "tree_of_life_induced_subtree",
        "test_input": "null",
        "tests": {
            "error": ["ValueError","Return wrong kind of error, or did return error"]
        }
    },  
    "test_about": {
        "test_function": "tree_of_life_about",
        "test_input": "null",
        "tests": {
            "contains": ["root_taxon_name","Output doesn't contain root_taxon_name"]
        }
    },
    "test_about_2": {
        "test_function": "tree_of_life_about",
        "test_input": "null",
        "tests": {
            "contains": ["num_source_studies","Output doesn't contain num_source_studies"]
        }
    },
    "test_about_3": {
        "test_function": "tree_of_life_about",
        "test_input": "null",
        "tests": {
            "contains": ["taxonomy_version","Output doesn't contain taxonomy_version"]
        }
    },
    "test_about_4": {
        "test_function": "tree_of_life_about",
        "test_input": "null",
        "tests": {
            "contains": ["root_ott_id","Output doesn't contain root_ott_id"]
        }
    },
    "test_about_5": {
        "test_function": "tree_of_life_about",
        "test_input": "null",
        "tests": {
            "contains": ["num_tips","Output doesn't contain num_tips"]
        }
    }
}
